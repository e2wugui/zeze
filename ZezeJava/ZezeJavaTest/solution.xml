<?xml version="1.0" encoding="utf-8"?>

<solution name="demo" ModuleIdAllowRanges="1-5,100">
	<import file="demo2.xml"/>
	<import file="taskExt.xml"/>

	<bean name="Bean1"> bean的注释
		<enum name="Enum1" value="4"/> enum的注释
		<variable id="1" name="V1" type="int" default="1"/> bean1comm
		bean1line2
		<variable id="2" name="V2" type="map" key="int" value="int"/> bean1v2
		bean1v2line2
	</bean>
	<module name="web" id="4">
		<bean name="BMap2Bean1">
			<variable id="1" name="map2" type="map[int, demo.Bean1]"/>
		</bean>
		<table name="tMap2Bean1" key="long" value="BMap2Bean1"/>
		<bean name="BCount" UseData="true">
			<variable id="1" name="Count" type="long"/>
		</bean>
		<table name="tHelloCount" suffix="__1" key="long" value="BCount"/>
		<servlet name="hellocount"/>
	</module>

	<module name="Module1" id="1"> module的注释
		<bean name="BKuafu" UseData="true">
			<variable id="1" name="Account" type="long"/>
			<variable id="2" name="Money" type="long"/>
		</bean>

		<bean name="BKuafuResult" UseData="true">
			<variable id="1" name="Money" type="long"/>
		</bean>

		<table name="tKuafu" suffix="@AppMainVersion" key="long" value="BKuafu" />

		<bean name="BTestSchemas">
			<variable id="1" name="Var1" type="long"/>
			<variable id="2" name="Var2" type="long"/>
		</bean>
		<table name="tTestSchemas" suffix="@ServerId" key="long" value="BTestSchemas"/>

		<beankey name="AutoKey"> beankey的注释
			<variable id="1" name="Name" type="string"/> 一般就是表名。
			<variable id="2" name="LocalId" type="long"/>
		</beankey>

		<bean name="BAutoValue" comment="bean的注释">
			<variable id="1" name="Current" type="long"/>
			<variable id="2" name="Name" type="string"/>
			<variable id="3" name="LocalId" type="long"/>
		</bean>

		<table name="tAutokey" key="AutoKey" value="BAutoValue"/> table的注释

		<!--
		bean的
		多行注释
		-->
		<bean name="BRemoved2" equals="true">
			<variable id="1" name="int_1" type="int"/> com aa
		</bean>
		<bean name="BSimple" equals="true">
			<variable id="1" name="int_1" type="int"/> com aa
			<variable id="2" name="long2" type="long"/> com aa
			<variable id="3" name="string3" type="string"/> com aa
			<variable id="4" name="removed" type="BRemoved2"/> com aa
		</bean>
		<bean name="BItem" MappingClass="true">
			<variable id="14" name="Subclass" type="dynamic">
				<value bean="demo.Bean1:1" />
				<value bean="BSimple:2" />
				<value bean="BFood:3"/>
			</variable>
		</bean>
		<bean name="BFood">
			<variable id="14" name="Subclass" type="dynamic">
				<value bean="demo.Bean1:1" />
				<value bean="BSimple:2" />
			</variable>
		</bean>
		<bean name="BValue" version="version" equals="true" interface="UnitTest.Zeze.ILong2">
			<enum name="Enum1" value="4" comment="enum的注释"/>

			<variable id="1" name="int_1" type="int" AllowNegative="true"/> com aa
			<variable id="2" name="long2" type="long"/> com aa
			<variable id="3" name="string3" type="string"/> com aa
			<variable id="4" name="bool4" type="bool"/> com aa
			<variable id="5" name="short5" type="short"/> com aa
			<variable id="6" name="float6" type="float"/> com aa
			<variable id="7" name="double7" type="double"/> com aa
			<variable id="8" name="bytes8" type="binary"/> com aa
			<variable id="9" name="list9" type="list" value="demo.Bean1"/> com aa
			<variable id="10" name="set10" type="set" value="int"/> com aa
			<variable id="11" name="map11" type="map" key="long" value="demo.Module2.BValue"/> com aa
			<variable id="12" name="bean12" type="BSimple"/> simple
			<variable id="13" name="byte13" type="byte"/> com aa
			<variable id="14" name="dynamic14" type="dynamic">
				<value bean="demo.Bean1:1"/>
				<value bean="BSimple:2"/>
				<value bean="BItem:3"/>
			</variable>
			<variable id="15" name="map15" type="map" key="long" value="long"/> com aa
			<variable id="16" name="map16" type="map" key="Key" value="BSimple"/> com aa

			<variable id="17" name="vector2" type="vector2" />
			<variable id="18" name="vector2Int" type="vector2int" />
			<variable id="19" name="vector3" type="vector3" />
			<variable id="20" name="vector3Int" type="vector3int" />
			<variable id="21" name="vector4" type="vector4" />
			<variable id="22" name="quaternion" type="quaternion" />
			<variable id="23" name="dynamic23" type="dynamic">
				<GetSpecialTypeIdFromBean value="demo.Module1.ModuleModule1::getSpecialTypeIdFromBean"/>
				<CreateBeanFromSpecialTypeId value="demo.Module1.ModuleModule1::createBeanFromSpecialTypeId"/>
				<CreateDataFromSpecialTypeId value="demo.Module1.ModuleModule1::createDataFromSpecialTypeId"/>
			</variable>

			<variable id="24" name="listVector2Int" type="list" value="vector2int"/>
			<variable id="25" name="map25" type="map[Key,BSimple]"/>
			<variable id="26" name="map26" type="map[Key,dynamic:BSimple]"/>
			<variable id="27" name="dynamic27" type="dynamic:BSimple"/>
			<variable id="28" name="key28" type="Key"/>
			<variable id="29" name="array29" type="array[float]"/>

			<variable id="30" name="list30" type="list[int]"         javaType="IntList"/>
			<variable id="31" name="list31" type="list[long]"        javaType="LongList"/>
			<variable id="32" name="list32" type="list[float]"       javaType="FloatList"/>
			<variable id="33" name="list33" type="list[vector2]"     javaType="Vector2List"/>
			<variable id="34" name="list34" type="list[vector3]"     javaType="Vector3List"/>
			<variable id="35" name="list35" type="list[vector4]"     javaType="Vector4List"/>
			<variable id="36" name="list36" type="list[vector2int]"  javaType="Vector2IntList"/>
			<variable id="37" name="list37" type="list[vector3int]"  javaType="Vector3IntList"/>
			<variable id="38" name="set38"  type="set[int]"          javaType="IntHashSet"/>
			<variable id="39" name="set39"  type="set[long]"         javaType="LongHashSet"/>
			<variable id="40" name="map40"  type="map[int,int]"      javaType="IntHashMap"/>
			<variable id="41" name="map41"  type="map[long,BSimple]" javaType="LongHashMap"/>
			<variable id="42" name="map42Recursive" type="map[long, BValue]"/>
			<!--variable id="43" name="list43" type="list[dynamic:BSimple]"/-->

			<variable id="50" name="version" type="long"/>

			<variable id="99" name="LongList" type="list[long]"/>
		</bean>
		<beankey name="Key" comment="beankey的注释">
			<enum name="Enum1" value="4" description="enum的注释"/>
			<variable id="1" default="1" name="s" type="short"/> com 2
			<variable id="2" name="str" type="string"/> com 2
			com 2
		</beankey>
		<beankey name="EmptyKey"/> beankey的注释

		<protocol name="Protocol4" argument="BValue" handle="server,clientscript" CriticalLevel="0"/> protocol的注释
		<protocol name="Protocol3" argument="demo.Module2.BValue" handle="server,clientscript" CriticalLevel="1" comment="protocol的注释"/>
		<!-- rpc的注释 -->
		<rpc name="Rpc1" argument="BValue" result="BValue" handle="server" comment=""/>
		<rpc name="Rpc2" argument="BValue" result="BValue" handle="clientscript" CriticalLevel="2"/> rpc的注释

		<!-- table的注释 -->
		<table name="Table1" key="long" value="BValue" RelationalMapping="true" memory="false" autokey="true"/>
		<table name="Table2" key="Key" value="BValue" RelationalMapping="true" memory="false" comment="table的注释"/>
		<table name="Table3" key="long" value="BValue" memory="false"/>
		<table name="TableImportant" key="long" value="BValue"/>

		<table name="Table4" key="long" value="BValue" memory="true" gen="client" autokey="true"/>
		<table name="Table5" key="long" value="demo.Module2.BValue" memory="false"/>
		<!-- protocol的注释 -->
		<protocol name="ProtocolNoProcedure" NoProcedure="true" handle="server"/>
		<table name="tflush" key="long" value="BValue" memory="false"/>
		<module name="Module11" id="3" comment=""/> module的注释

		<table name="tWalkPage" key="int" RelationalMapping="true" value="demo.Bean1" memory="false"/>

		<protocol name="ProtocolUseData" argument="BValue" UseData="true" handle="server" CriticalLevel="3"/>

		<table name="tAutoKeyRandom" key="binary" value="demo.Bean1" autokey="random"/>
		<table name="tMemorySize" key="long" value="demo.Bean1" memory="true"/>

		<bean name="BOnlyData" UseData="only">
			<variable id="1" default="1" name="s" type="int"/> com aa
		</bean>
		<protocol name="ProtocolOnlyUseData" argument="BOnlyData" UseData="true" handle="server"/>
		<protocol name="ProtocolOnlyData" argument="BOnlyData" handle="server"/>
		<rpc name="RpcOnlyUseData" argument="BOnlyData" UseData="true" handle="server"/>
		<rpc name="RpcOnlyData" result="BOnlyData" handle="server"/>

		<table name="tCoverHistory" key="long" value="BValue" memory="false"/>
	</module>

	<!-- module的注释 -->
	<module name="Module2" id="2">
		<bean name="BValue">
			<variable id="1" default="1" name="s" type="int"/> com aa
		</bean>
	</module>

	<module name="ModuleGTable" id="100">
		<bean name="BValue">
			<variable id="1" name="gTable" type="gtable[int, int, int]"/>
		</bean>
		<bean name="Bean1">
			<variable id="1" name="IntVar" type="int"/>
		</bean>
		<bean name="BValue2">
			<variable id="1" name="gTable" type="gtable[int, int, Bean1]"/>
		</bean>
		<table name="tGTable" key="long" value="BValue"/>
		<table name="tGTable2" key="long" value="BValue2"/>
	</module>
	<!--
	name 项目名字
	gendir 代码生成输出目录，默认是当前目录
	GenTables 选择生成哪些表格（Table），如果为空，那就生成那些没有配置gen属性的table，可以用','分开指定多个名字
	-->
	<project name="ZezeJavaTest" gendir=".." scriptdir="src" platform="java" GenTables="" MappingClass="true">
		<!--
		这里引用的模块不该定义协议，定义了也不会被生成，一般为纯逻辑或者数据库模块。
		<module ref="Module2"/>
		-->
		<!-- service 生成到 solution 名字空间下 -->
		<service name="TestServer" handle="server,servlet" base="Zeze.Services.HandshakeServer">
			<module ref="web"/>
			<module ref="Module1"/>
			<module ref="M6"/>
			<module ref="demo.M6.M7"/>
			<module ref="TaskTest.TaskExt"/>
			<module ref="ModuleGTable"/>
		</service>
	</project>

	<project name="CxxTest" gendir="../../" platform="cxx" GenTables="" ClientScript="true">
		<service name="TestClient" handle="client,clientscript">
			<module ref="Module1"/>
			<module ref="M6"/>
			<module ref="demo.M6.M7"/>
			<module ref="TaskTest.TaskExt"/>
		</service>
	</project>
</solution>
