apply from: '../build.gradle'

dependencies {
    // required dependencies
    implementation 'org.apache.logging.log4j:log4j-api:2.25.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.25.2'
    implementation 'org.jetbrains:annotations:26.0.2'
    implementation 'org.pcollections:pcollections:4.0.2'
    compileOnly 'org.rocksdb:rocksdbjni:10.4.2'
    runtimeOnly 'org.rocksdb:rocksdbjni:10.4.2:win64'
    runtimeOnly 'org.rocksdb:rocksdbjni:10.4.2:linux64'
    runtimeOnly 'org.rocksdb:rocksdbjni:10.4.2:osx'

    // for netty
    compileOnly 'io.netty:netty-codec-http:4.1.127.Final'
    compileOnly 'io.netty:netty-transport-native-epoll:4.1.127.Final:linux-x86_64'
    compileOnly 'org.slf4j:slf4j-api:2.0.17'
    compileOnly 'org.apache.logging.log4j:log4j-slf4j2-impl:2.25.2'

    // optional dependencies

    // for GTable
    //compileOnly 'com.google.guava:guava:33.4.0-jre'

    // for Json field
    compileOnly 'com.alibaba.fastjson2:fastjson2:2.0.59'

    // for tikv
    compileOnly 'org.tikv:tikv-client-java:3.3.5'

    // for jdbc(mysql,sqlserver,tidb)
    compileOnly 'com.alibaba:druid:1.2.27'
    compileOnly 'com.mysql:mysql-connector-j:8.4.0'
    compileOnly 'org.postgresql:postgresql:9.4.1208'

    // for redis(kvrocks,pika,tendis)
    compileOnly 'redis.clients:jedis:5.2.0'

    // dynamodb
    compileOnly 'com.amazonaws:aws-java-sdk-dynamodb:1.12.788'

    // foundationDB
    compileOnly 'org.foundationdb:fdb-java:7.4.3'

    // for rocketmq
    compileOnly 'org.apache.rocketmq:rocketmq-client:4.9.8'
    compileOnly 'javax:javaee-api:8.0.1'

    // for task component
    compileOnly 'org.jgrapht:jgrapht-core:1.5.2'

    // for new Compress/Decompress Codec in Zeze.Net
    compileOnly 'com.github.luben:zstd-jni:1.5.7-4'

    // for Consul in Zeze.Netty
    compileOnly 'com.ecwid.consul:consul-api:1.4.5'

    // for FreeMarker
    compileOnly 'org.freemarker:freemarker:2.3.34'

    // for Thymeleaf
    compileOnly 'org.thymeleaf:thymeleaf:3.1.3.RELEASE'

    // for metric
    compileOnly 'io.prometheus:prometheus-metrics-core:1.3.10'
    compileOnly 'io.prometheus:prometheus-metrics-instrumentation-jvm:1.3.10'
    compileOnly 'io.prometheus:prometheus-metrics-exporter-httpserver:1.3.10'
}

jar {
    manifest {
        attributes(
                'Premain-Class': 'Zeze.Util.ClassReloader',
                'Can-Redefine-Classes': 'true',
        )
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ["--add-exports", "java.base/sun.security.rsa=ALL-UNNAMED",
                             "--add-exports", "java.base/sun.security.util=ALL-UNNAMED",
                             "--add-exports", "java.base/sun.security.x509=ALL-UNNAMED"]
}

task startServiceManager(type: JavaExec) {
    classpath = configurations.runtimeClasspath
    classpath += sourceSets.main.runtimeClasspath
    classpath += files('.')
    mainClass = 'Zeze.Services.ServiceManagerServer'
    allJvmArgs = ['-Dlogname=ServiceManagerServer']
}

task startGlobalCacheManager(type: JavaExec) {
    classpath = configurations.runtimeClasspath
    classpath += sourceSets.main.runtimeClasspath
    classpath += files('.')
    mainClass = 'Zeze.Services.GlobalCacheManagerServer'
    allJvmArgs = ['-Dlogname=GlobalCacheManagerServer']
}

task startGlobalCacheManagerAsync(type: JavaExec) {
    classpath = configurations.runtimeClasspath
    classpath += sourceSets.main.runtimeClasspath
    classpath += files('.')
    mainClass = 'Zeze.Services.GlobalCacheManagerAsyncServer'
    allJvmArgs = ['-Dlogname=GlobalCacheManagerAsyncServer']
}
